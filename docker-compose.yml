services:
  app:
    container_name: slim-app
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
      target: ${DOCKER_TARGET_APP:-fpm}
      args:
        INSTALL_XDEBUG: ${DOCKER_INSTALL_XDEBUG:-false}
    working_dir: /var/www
    environment:
      DOCKER: "1"
      PHP_IDE_CONFIG: "serverName=slim.local"
    volumes:
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini:ro
      - ./.docker/php/php-fpm.conf:/usr/local/etc/php-fpm.d/php-fpm.conf:ro
      - ./.docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
      - .:/var/www:delegated
    ports:
      - "${EXTERNAL_APP_PORT:-80}:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - slim
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health-check" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  db:
    container_name: slim-db
    image: postgres:17.4-alpine
    ports:
      - "${FORWARD_DB_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - slim
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    container_name: slim-rabbitmq
    image: rabbitmq:4.1.0-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-rabbitmq}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-rabbitmq}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-app}
      RABBITMQ_NODENAME: rabbit@slim-rabbitmq
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE:-UNIQUE_RABBITMQ_COOKIE}
    networks:
      - slim
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    container_name: slim-redis
    image: redis:7.4.3-alpine3.21
    ports:
      - "${DOCKER_REDIS_HOST_PORT:-6379}:6379"
    networks:
      - slim
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  slim:
    driver: bridge
    name: slim-network